test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

amazon:
  service: S3
  access_key_id: <%= ENV['BUCKETEER_AWS_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['BUCKETEER_AWS_SECRET_ACCESS_KEY'] %>
  region: <%= ENV['BUCKETEER_AWS_REGION'] %>
  bucket: <%= ENV['BUCKETEER_BUCKET_NAME'] %>

# Remember not to checkin your GCS keyfile to a repository
google:
  service: GCS
  project: vacations
  bucket: <%= ENV.fetch('GOOGLE_BUCKET') %>
  credentials:
    type: <%= ENV.fetch('GOOGLE_TYPE') %>
    project_id: <%= ENV.fetch('GOOGLE_PROJECT_ID') %>
    private_key_id: <%= ENV.fetch('GOOGLE_PRIVATE_KEY_ID') %>
    private_key: <%= ENV.fetch('GOOGLE_PRIVATE_KEY').dump %>
    client_email: <%= ENV.fetch('GOOGLE_CLIENT_EMAIL') %>
    client_id: <%= ENV.fetch('GOOGLE_CLIENT_ID') %>
    auth_uri: <%= ENV.fetch('GOOGLE_AUTH_URI') %>
    token_uri: <%= ENV.fetch('GOOGLE_TOKEN_URI') %>
    auth_provider_x509_cert_url: <%= ENV.fetch('GOOGLE_AUTH_CERT') %>
    client_x509_cert_url: <%= ENV.fetch('GOOGLE_CLIENT_CERT') %>

# Use rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
